// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package review;

option go_package = "github.com/GoogleCloudPlatform/microservices-demo/src/frontend/genproto/hipstershop";

// Review service for gRPC communication
service ReviewService {
  // Create a new review
  rpc CreateReview(CreateReviewRequest) returns (CreateReviewResponse);
  
  // Get reviews for a product (used by ProductCatalog service)
  rpc GetProductReviews(GetProductReviewsRequest) returns (GetProductReviewsResponse);
  
  // Get reviews by a user
  rpc GetUserReviews(GetUserReviewsRequest) returns (GetUserReviewsResponse);
  
  // Get a specific review by ID
  rpc GetReview(GetReviewRequest) returns (GetReviewResponse);
  
  // Update an existing review
  rpc UpdateReview(UpdateReviewRequest) returns (UpdateReviewResponse);
  
  // Delete a review
  rpc DeleteReview(DeleteReviewRequest) returns (DeleteReviewResponse);
  
  // Get review summary for a product (used by ProductCatalog service)
  rpc GetProductReviewSummary(GetProductReviewSummaryRequest) returns (ProductReviewSummary);
  
  // Health check
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
}

message Review {
  int32 id = 1;
  string user_id = 2;
  string product_id = 3;
  int32 rating = 4;
  string review_text = 5;
  int64 created_at = 6;  // Unix timestamp
  int64 updated_at = 7;  // Unix timestamp
}

message GetProductReviewsRequest {
  string product_id = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message GetProductReviewsResponse {
  repeated Review reviews = 1;
}

message CreateReviewRequest {
  string user_id = 1;
  string product_id = 2;
  int32 rating = 3;
  string review_text = 4;
}

message CreateReviewResponse {
  Review review = 1;
  bool success = 2;
  string message = 3;
}

message GetUserReviewsRequest {
  string user_id = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message GetUserReviewsResponse {
  repeated Review reviews = 1;
}

message GetReviewRequest {
  int32 review_id = 1;
}

message GetReviewResponse {
  Review review = 1;
  bool found = 2;
}

message UpdateReviewRequest {
  int32 review_id = 1;
  int32 rating = 2;
  string review_text = 3;
}

message UpdateReviewResponse {
  Review review = 1;
  bool success = 2;
  string message = 3;
}

message DeleteReviewRequest {
  int32 review_id = 1;
}

message DeleteReviewResponse {
  bool success = 1;
  string message = 2;
}

message GetProductReviewSummaryRequest {
  string product_id = 1;
}

message ProductReviewSummary {
  string product_id = 1;
  int32 total_reviews = 2;
  float average_rating = 3;
  map<string, int32> rating_distribution = 4;
}

// Health check messages
message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;
  }
  ServingStatus status = 1;
} 